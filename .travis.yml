language: python
python: 
    - "3.8"
services: 
    - docker 
#First main phase is install
install:
    - pip install -r requirements.txt
#Only trigger Travis when pushed to master branch:
branches: 
    only: 
       - master
#Second main phase is script
#This is where Travis tests and runs code
script:
#Run code involving content of code:
    #- python tests/test_structure.py
    #- python tests/test_content.py 
    #Simple python script can be run like this: 
     - python firsttest.py
    #Running all tests in a package: 
    # - python -m unittest discover tests 

    #Docker
    #Build image and run container
    - cd first_flask_app
    - docker build -t "first_flask_app_image" . 
    - docker run -d -p 5000:5000 --name first_flask_app_container first_flask_app_image 
    - docker ps

    #Running test, including those involving if application is running
    - cd -
    #- python tests/test_running.py
    #- python -m unittest discover tests 

    #Simple way to check connection (fails if connection is not obtained)
    #curl "http://0.0.0.0:5000/"
    #Also possible to add health check to docker

    #Stop and remove the running container
    - cd first_flask_app
    - docker stop $(docker ps -q -f "name=first_flask_app_container")
    - docker ps

    - docker container rm $(docker ps -a -q -f "name=first_flask_app_container")
    - cd -

#Additional actions?
#after_success:
#after_failure:
#deploy: